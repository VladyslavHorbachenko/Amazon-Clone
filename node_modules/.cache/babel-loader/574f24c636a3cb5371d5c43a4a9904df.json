{"ast":null,"code":"import Product from \"./Product\";\nimport React from \"react\";\nexport const initialState = {\n  basket: [],\n  user: null\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"SET_USER\":\n    case 'ADD_TO_BASKET':\n      //Logic for adding item to basket\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n      break;\n\n    case 'REMOVER_FROM_BASKET':\n      //Logic for Removing item from basket\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        //item exist in basket,remove it...\n        newBasket.splice(index, 1);\n      } else {\n        console.log(\"can not remove\");\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/vladyslavhorbachenko/Desktop/amazon-clone/src/reducer.js"],"names":["Product","React","initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","newBasket","index","findIndex","basketItem","id","splice"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAC,EADiB;AAExBC,EAAAA,IAAI,EAAC;AAFmB,CAArB;AAKP,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC1BA,MAD0B,aAC1BA,MAD0B,uBAC1BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAAQC,IAAR,KAAiBA,IAAI,CAACC,KAAL,GAAaF,MAAb,GAAsBA,MAAtD,EAA8D,CAA9D,CADG;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAoB;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AAEI,SAAK,UAAL;AAEA,SAAK,eAAL;AACA;AACI,aAAO,EAAC,GAAGJ,KAAJ;AACHR,QAAAA,MAAM,EAAC,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAiBS,MAAM,CAACJ,IAAxB;AADJ,OAAP;AAGA;;AACJ,SAAK,qBAAL;AACI;AACA,UAAIQ,SAAS,GAAG,CAAC,GAAGL,KAAK,CAACR,MAAV,CAAhB;AAEA,YAAMc,KAAK,GAAGN,KAAK,CAACR,MAAN,CAAae,SAAb,CAAwBC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBR,MAAM,CAACQ,EAAhE,CAAd;;AAEA,UAAIH,KAAK,IAAI,CAAb,EAAe;AACX;AACAD,QAAAA,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,EAAuB,CAAvB;AACH,OAHD,MAGK;AACGJ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACP;;AACD,aAAO,EAAC,GAAGH,KAAJ;AAAUR,QAAAA,MAAM,EAACa;AAAjB,OAAP;;AACJ;AACI,aAAOL,KAAP;AAxBR;AA0BH,CA5BD;;AA6BA,eAAeD,OAAf","sourcesContent":["import Product from \"./Product\";\nimport React from \"react\";\n\n\nexport const initialState = {\n    basket:[],\n    user:null\n};\n\nexport const getBasketTotal = (basket) =>\n    basket?.reduce((amount,item) => item.price + amount + amount, 0)\n\nconst reducer = (state, action) =>  {\n    console.log(action);\n    switch (action.type) {\n\n        case \"SET_USER\":\n            \n        case 'ADD_TO_BASKET':\n        //Logic for adding item to basket\n            return {...state,\n                basket:[...state.basket,action.item]\n            };\n            break;\n        case 'REMOVER_FROM_BASKET':\n            //Logic for Removing item from basket\n            let newBasket = [...state.basket];\n\n            const index = state.basket.findIndex((basketItem) => basketItem.id === action.id);\n\n            if (index >= 0){\n                //item exist in basket,remove it...\n                newBasket.splice(index,1);\n            }else{\n                    console.log(\"can not remove\")\n            }\n            return {...state,basket:newBasket}\n        default:\n            return state\n    }\n}\nexport default reducer;"]},"metadata":{},"sourceType":"module"}